import {
	ColumnType,
	type Generated,
	type Insertable,
	type Selectable,
	type Updateable,
} from "kysely";

export interface Database {
	user_prizes: UserPrizeTable;
}

export interface UserPrizeTable {
	// Columns that are generated by the database should be marked
	// using the `Generated` type. This way they are automatically
	// made optional in inserts and updates.
	id: Generated<number>;
	identifier: string;
	prizeType: "regular" | "special" | "rare";
}

// You should not use the table schema interfaces directly. Instead, you should
// use the `Selectable`, `Insertable` and `Updateable` wrappers. These wrappers
// make sure that the correct types are used in each operation.
//
// Most of the time you should trust the type inference and not use explicit
// types at all. These types can be useful when typing function arguments.
export type UserPrize = Selectable<UserPrizeTable>;
export type NewUserPrize = Insertable<UserPrizeTable>;
export type UserPrizeUpdate = Updateable<UserPrizeTable>;
